// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.24.3
// source: movies_persons_service_v1.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MoviesPersonsServiceV1Client is the client API for MoviesPersonsServiceV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MoviesPersonsServiceV1Client interface {
	GetPersons(ctx context.Context, in *GetMoviePersonsRequest, opts ...grpc.CallOption) (*Persons, error)
}

type moviesPersonsServiceV1Client struct {
	cc grpc.ClientConnInterface
}

func NewMoviesPersonsServiceV1Client(cc grpc.ClientConnInterface) MoviesPersonsServiceV1Client {
	return &moviesPersonsServiceV1Client{cc}
}

func (c *moviesPersonsServiceV1Client) GetPersons(ctx context.Context, in *GetMoviePersonsRequest, opts ...grpc.CallOption) (*Persons, error) {
	out := new(Persons)
	err := c.cc.Invoke(ctx, "/movies_persons_service.moviesPersonsServiceV1/GetPersons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoviesPersonsServiceV1Server is the server API for MoviesPersonsServiceV1 service.
// All implementations must embed UnimplementedMoviesPersonsServiceV1Server
// for forward compatibility
type MoviesPersonsServiceV1Server interface {
	GetPersons(context.Context, *GetMoviePersonsRequest) (*Persons, error)
	mustEmbedUnimplementedMoviesPersonsServiceV1Server()
}

// UnimplementedMoviesPersonsServiceV1Server must be embedded to have forward compatible implementations.
type UnimplementedMoviesPersonsServiceV1Server struct {
}

func (UnimplementedMoviesPersonsServiceV1Server) GetPersons(context.Context, *GetMoviePersonsRequest) (*Persons, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPersons not implemented")
}
func (UnimplementedMoviesPersonsServiceV1Server) mustEmbedUnimplementedMoviesPersonsServiceV1Server() {
}

// UnsafeMoviesPersonsServiceV1Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MoviesPersonsServiceV1Server will
// result in compilation errors.
type UnsafeMoviesPersonsServiceV1Server interface {
	mustEmbedUnimplementedMoviesPersonsServiceV1Server()
}

func RegisterMoviesPersonsServiceV1Server(s grpc.ServiceRegistrar, srv MoviesPersonsServiceV1Server) {
	s.RegisterService(&MoviesPersonsServiceV1_ServiceDesc, srv)
}

func _MoviesPersonsServiceV1_GetPersons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoviePersonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesPersonsServiceV1Server).GetPersons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/movies_persons_service.moviesPersonsServiceV1/GetPersons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesPersonsServiceV1Server).GetPersons(ctx, req.(*GetMoviePersonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MoviesPersonsServiceV1_ServiceDesc is the grpc.ServiceDesc for MoviesPersonsServiceV1 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MoviesPersonsServiceV1_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "movies_persons_service.moviesPersonsServiceV1",
	HandlerType: (*MoviesPersonsServiceV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPersons",
			Handler:    _MoviesPersonsServiceV1_GetPersons_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "movies_persons_service_v1.proto",
}
